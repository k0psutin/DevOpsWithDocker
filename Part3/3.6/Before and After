#Before optimizing

FROM ruby:2.6.0

EXPOSE 3000

WORKDIR /app
COPY . /app

RUN apt-get update && apt-get install -y vim curl
RUN curl -sL https://deb.nodesource.com/setup_10.x | bash
RUN apt-get install -y nodejs

RUN gem install bundler
RUN bundle install

ENV RAILS_ENV=production

RUN rails db:migrate
RUN rake assets:precompile

ENV RAILS_LOG_TO_STDOU=true
ENV EDITOR=vim

CMD ["rails", "s", "-e", "production"]

# After

# Note: Multistage build with non-root user.
# Image size: 220mb.

FROM ruby:2.6.0-alpine AS builder

ENV RAILS_ENV=production 
ENV RAILS_LOG_TO_STDOUT=true

RUN apk add --update \
    build-base \
    sqlite-dev \
    nodejs \
    tzdata \
    bash && \
    gem install bundler && \
    rm -rf /var/cache/apk/* /usr/local/bundle/cache/*.gem

WORKDIR /app
COPY Gemfile* /app/

RUN bundle install

FROM ruby:2.6.0-alpine AS production

ENV RAILS_ENV=production 
ENV RAILS_LOG_TO_STDOUT=true

RUN apk add --update \
    sqlite-dev \
    nodejs \
    tzdata && \
    addgroup -S app && \
    adduser -S -G app app

COPY . /app
COPY --from=builder /usr/local/bundle/ /usr/local/bundle/
COPY --from=builder /app /app

WORKDIR /app

RUN rake assets:precompile && rails db:migrate && chown -R app:app /app

USER app

EXPOSE 3000

CMD ./bin/rails s -e production
